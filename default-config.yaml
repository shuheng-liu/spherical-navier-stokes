# pde constants
pde:
  omega0: 10.0
  omega1: 10.0
  rho: 1.0
  mu: 1.0
  r0: &r0 0.1
  r1: &r1 10.0
  degrees: [ 0, 2, 4, 6, 8, 12, 14, 16, 18, 20 ]
  theta_singularity: 0.1

# network architecture
network:
  ur: &default_net
    module_type: sequential
    args:
      - module_type: monomialnn
        kwargs:
          degrees: [ 1, 2 ]
      - module_type: resnet
        args: [ 2, 10 ]
        kwargs:
          n_res_blocks: 1
          n_res_units: 1024
          actv: Swish1
  utheta: *default_net
  uphi: *default_net
  p: *default_net

# curriculum
curriculum:
  r0_start: 0.1
  r1_start: 10.0
  n_curricula: 10
  epochs_per_curriculum: 4000
  train:
    n_batches: 4
    base_size: 2048
    generator:
      type: spherical
      method: equally-radius-noisy
  valid:
    n_batches: 0
    base_size: 2048
    generator:
      type: spherical-static
      method: equally-radius-noisy

# weight function
weighting:
  r_mom: &default_weight
    weight: 1.
    type: softstep
    args:
      a: 10.
      b: 10.
  theta_mom: *default_weight
  phi_mom: *default_weight
  div: *default_weight

# monitor
monitor:
  r0: *r0
  r1: *r1
  theta0: 0.1
  theta1: 3.041592653589793
  phi0: 0.0
  phi1: 6.283185307179586
  shape: [ 32, 16, 2 ]
  r_scale: log
  residual_check_every: 1000
  solution_check_every: 100

# optimizer
optimizer:
  type: Adam
  kwargs:
    lr: 0.005
    betas: [ 0.9, 0.999 ]
